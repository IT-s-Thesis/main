version: '3.5'

networks:
  reverse-proxy-net:
    name: reverse-proxy-net
    driver: overlay
    # external: true
  web-net:
    name: web-net
    driver: overlay
    
services:
  web:
    image: peterdinh/odoo
    environment:
      - HOST=db
    ports:
      - "8069:8069"
    volumes:
      - odoo-web-data:/var/lib/odoo
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy-net"
      - "traefik.odoo.frontend.rule=Host:web.lc"
      - "traefik.odoo.port=8069"
      - "traefik.odoo.backend=odoo"
      - "traefik.odoo.weight=10"
    networks:
      - reverse-proxy-net
      - web-net
    deploy:
      placement:
        constraints:
          - node.role==worker
  db:
    image: postgres:10
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
    networks:
      - reverse-proxy-net
      - web-net
    labels:
      - "traefik.enable=false"
    deploy:
      placement:
        constraints:
          - node.role==manager
  traefik:
    image: traefik:1.7
    command:
      - --docker
      - --docker.swarmMode
      - --docker.watch
      - --docker.exposedbydefault=false
      - --docker.domain=traefik.lc
    ports:
      - 80:80
      - 443:443
    networks:
      - reverse-proxy-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role==manager
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy-net"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.$USE_HOSTNAME"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        mode: host

volumes:
  odoo-web-data:
  odoo-db-data: